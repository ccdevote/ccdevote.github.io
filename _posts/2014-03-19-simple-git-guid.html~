
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Git 配置</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>配置用户信息
<div class="org-src-container">

<pre class="src src-python">git config --<span style="color: #99cc99;">global</span> user.name <span style="color: #66cccc;">"Zhiyong Ma"</span>
git config --<span style="color: #99cc99;">global</span> user.email <span style="color: #66cccc;">"ccdevote@gmail.com"</span>
</pre>
</div>
</li>
<li>配置编辑器
在commit未指定-m选项时编辑comment等信息
<div class="org-src-container">

<pre class="src src-python">git config --golbal core.editor <span style="color: #66cccc;">"emacs -nw"</span>
</pre>
</div>
</li>
<li>配置命令别名
<div class="org-src-container">

<pre class="src src-python">git config --<span style="color: #99cc99;">global</span> alias.ci <span style="color: #66cccc;">"commit -s"</span>
</pre>
</div>
</li>
<li>修改配置文件
<div class="org-src-container">

<pre class="src src-python">git config -e --[<span style="color: #99cc99;">global</span>|system]
</pre>
</div>
</li>
</ol>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 常用命令</h2>
<div class="outline-text-2" id="text-2">
<ol class="org-ol">
<li>添加文件到缓冲区
文件添加后会从未跟踪状态变为跟踪状态，当文件的状态修改后git才能作出相应的判断。
<div class="org-src-container">

<pre class="src src-python">git add <span style="color: #cc99cc;">file</span>..
</pre>
</div>
</li>
<li>提交当前版本
把所有通过add命令加入暂存区被跟踪的文件当作一个版本提交
<div class="org-src-container">

<pre class="src src-python">git commit -m <span style="color: #66cccc;">"description"</span>
</pre>
</div>
</li>
<li>推送到远程分支
<div class="org-src-container">

<pre class="src src-python">git push origin mzy
</pre>
</div>
</li>
<li>显示精简的状态输出
<div class="org-src-container">

<pre class="src src-python">git status -s
</pre>
</div>
</li>
<li>查看cached和版本库中的文件差异
<div class="org-src-container">

<pre class="src src-python">git diff --cached
</pre>
</div>
</li>
<li>暂存区的目录树会被master分支目录树替换
<div class="org-src-container">

<pre class="src src-python">git reset HEAD
</pre>
</div>
</li>
<li>删除暂存区的文件工作区不变
<div class="org-src-container">

<pre class="src src-python">git rm --cached &lt;<span style="color: #cc99cc;">file</span>&gt;
</pre>
</div>
</li>
<li>限制引用对应的提交id结合 git cat-file -p 显示提交信息
<div class="org-src-container">

<pre class="src src-python">git rev-parse master
</pre>
</div>
</li>
<li>其他需要注意的地方
</li>
</ol>
<p>
git 中有工作区 暂存区 和 HEAD区域
不要使用git commit -a命令 这样提交会使暂存区失去意义，丧失版本控制能力。
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Emacs 下面使用git</h2>
<div class="outline-text-2" id="text-3">
<p>
   Emacs有强大的VC可以提供对git的支持，VC是一个抽象的版本控制系统，可以提供对多版本控制系统的支持如SVN、CVS、Git等。使用Git时还应结合EGit或着Magit等插件一起使用。
种下面简单介绍一下在Emacs下面使用Git的操作方式：
</p>
</div>
<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> 基本操作</h3>
<div class="outline-text-3" id="text-3-1">
<ol class="org-ol">
<li>初始化Git
<div class="org-src-container">

<pre class="src src-python">M-x -&gt; magit-init          <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#36827;&#20837;&#38656;&#35201;&#36827;&#34892;&#29256;&#26412;&#25511;&#21046;&#30340;&#30446;&#24405;&#25191;&#34892;&#27492;&#21629;&#20196;&#65292;&#30456;&#24403;&#20110;git init</span>
</pre>
</div>
</li>
<li>添加文件到缓冲区
<div class="org-src-container">

<pre class="src src-python">C-x v i                    <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#30456;&#24403;&#20110;git add &lt;file&gt;</span>
</pre>
</div>
</li>
<li>提交文件
<div class="org-src-container">

<pre class="src src-python">C-x v v                    <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#30456;&#24403;&#20110;git commit</span>
//&#28155;&#21152;&#25552;&#20132;Message
C-c C-c                    <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#23436;&#25104;&#25552;&#20132;</span>
</pre>
</div>
</li>
<li>提交到远程服务器
<div class="org-src-container">

<pre class="src src-python">M-x magit-push             <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#30456;&#24403;&#20110;git push</span>
//&#39318;&#27425;&#20351;&#29992;&#38656;&#35201;&#37197;&#32622;remote
</pre>
</div>
</li>
</ol>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> 分支操作</h3>
<div class="outline-text-3" id="text-3-2">
<ol class="org-ol">
<li>拉取远端分支
<div class="org-src-container">

<pre class="src src-python">C-x v +                    <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#30456;&#24403;&#20110;git pull</span>
</pre>
</div>
</li>
<li>合并分支
<div class="org-src-container">

<pre class="src src-python">C-x v m                    <span style="color: #999999; font-style: italic;"># </span><span style="color: #999999; font-style: italic;">&#30456;&#24403;&#20110;git merge</span>
</pre>
</div>
</li>
<li>创建新分支
<div class="org-src-container">

<pre class="src src-python"></pre>
</div>
</li>
</ol>
</div>
</div>
</div>
